---
title: "In-Class Exercise 5: "
date: "13 February 2023"
date-modified: "`r Sys.Date()`"
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

# 1.0 Overview

# 2.0 Setup

## 2.1 Installing and Loading the R Packages

```{r}
pacman::p_load(sf, tmap, sfdep, tidyverse)
#keep tidyverse at the end for dependency checking
```

## 2.2 The Data

-   Hunan, a geospatial data set in ESRI shapefile format, and

-   Hunan_2012, an attribute data set in csv format.

### 2.2.1 Import Geospatial Data

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

### 2.2.2 Import attribute table

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

### 2.2.3 Combine both data frames using left join

::: callout-important
## In order to retain the geospatial properties, the left data frame must be the sf data.frame(i.e. hunan)
:::

```{r}
hunan_GDPPC <- left_join(hunan,hunan2012)%>%
  select(1:4, 7, 15) #name, id, name, engtype, 7 - county, 15 - gdppc
```

### 2.2.3 Choropleth Map

```{r}

tmap_mode("plot")
tm_shape(hunan_GDPPC) + 
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC") + 
  tm_layout(main.title = "Distribution of GDP per capita by district, Hunan Province",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE) + 
  tm_borders(alpha = 0.5) + 
  # tm_text("NAME_3", size=0.5) + 
  tm_compass(type = "8star", size = 2) + 
  tm_scale_bar() + #decimal degree projection turns into km using great circle calculation 
  tm_grid(alpha = 0.2)



```

## 2.3 Identify area neighbors

### 2.3.1 Contiguity Spatial Weights

Redundant in later steps = 2.6

Derive neighbor's list using Queen's method

```{r}
# -- st version
cn_queen <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry), #default is queen
         .before = 1) #place as first column

#wm_q <- poly2nd(hunan_GDPPC, queen = TRUE) -- sp version
```

Derive neighbor's list using Rook's method

```{r}
cn_rook <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry), #default is queen
         queen = FALSE,
         .before = 1) #place as first column
```

```{r}
#geo <- sf::st_geometry(huann)
#nb <- st_knn(geo)

```

## 2.4 K-nearest neighbors method

## 2.5 Distance band method

Fixed distance criterion - lower = 0, upper = whatever

## 2.6 Compute contiguity weights

### 2.6.1 Contiguity weights: Queen's method

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb),
         .before = 1)
```

### 2.6.2 Contiguity weights: Rook's method

```{r}
wm_r <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         queen = FALSE,
         wt = st_weights(nb),
         .before = 1)
```

## 2.7 Computing

## 2.8 Compute local Moran's I

## 2.9 Visualise local Moran's I
